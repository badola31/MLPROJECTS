# -*- coding: utf-8 -*-
"""Task2_Kmeans

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qUAnD6_hzH-cKEYp1BqS04cKlSBnT9w8
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from scipy.cluster.hierarchy import dendrogram, linkage

file=pd.read_csv("milk.csv")
file

x=file.iloc[:,1]
z=file.iloc[:,2]
file=file.iloc[:,1:]
file

linked = linkage(file, 'average')

labelList = range(1,26)

plt.figure(figsize=(10,5))
dendrogram(linked,
            orientation='top',
            labels=labelList
           )
plt.show()

from sklearn.cluster import AgglomerativeClustering

cluster = AgglomerativeClustering(n_clusters=3, affinity='euclidean', linkage='average')
y=cluster.fit_predict(file)
y

plt.scatter(x,z, c=y, cmap='rainbow')

K=3
    center_1 = [90.1,2.6,1,6.9,0.35]
    center_2 = [81.6,10.1,6.3,4.4,0.75]
    center_3 = [64.8,11.1,21.2,1.6,1.70]

centers=[center_1,center_2,center_3]

len(file)

cluster_1=[]
cluster_2=[]
cluster_3=[]
distance=[]
clusters=[cluster_1,cluster_2,cluster_3]

file=pd.read_csv('milk.csv')
file=file.iloc[:,1:].values
type(file)

centers
diff=[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]]

cluster_1=[]
cluster_2=[]
cluster_3=[]
distance=[]
clusters=[cluster_1,cluster_2,cluster_3]
for i in range(25):
  distance=[]
  for j in range(3):
    s=0
    for k in range(5):
      s=s+(file[i][k]-centers[j][k])**2
    s=s**.5
    distance.append(s) 
  min_value = min(distance)   
  min_index = distance.index(min_value)
  clusters[min_index].append(file[i])  

index=0
mean=[[],[],[]]
for i in clusters:
  for j in range(5):
    s=0
    for k in range(len(clusters[index])):
      s=s+i[k][j] 
    s=s/len(clusters[index])
    mean[index].append(s)
  index=index+1    
      

for i in range(3):
  for j in range(5):
    diff[i][j]=mean[i][j]-centers[i][j]
for i in range(3):
     centers[i]=mean[i]
diff

"""convergence achieved in 4 iterations"""

clusters

cluster_1=clusters[0]
cluster_2=clusters[1]
cluster_3=clusters[2]
x1=[]
x2=[]
x3=[]
y1=[]
y2=[]
y3=[]
for i in range(len(cluster_1)):
  x1.append(cluster_1[i][3])
for i in range(len(cluster_2)):
  x2.append(cluster_2[i][3])
for i in range(len(cluster_3)):
  x3.append(cluster_3[i][3])
for i in range(len(cluster_1)):
  y1.append(cluster_1[i][0])
for i in range(len(cluster_2)):
  y2.append(cluster_2[i][0])
for i in range(len(cluster_3)):
  y3.append(cluster_3[i][0])

plt.scatter(x1,y1,color='green',marker='*',alpha=0.6,s=100)
plt.scatter(x2,y2,color='blue',marker='+',alpha=0.6,s=100)
plt.scatter(x3,y3,color='red',marker='X',alpha=0.6,s=100)
plt.show()

# import matplotlib.pyplot as plt
# #filter rows of original data
# filtered_label2 = clusters[0]
# filtered_label8 = clusters[1]
 
# #Plotting the results
# plt.scatter(filtered_label2[:,0] , filtered_label2[:,1] , color = 'red')
# plt.scatter(filtered_label8[:,0] , filtered_label8[:,1] , color = 'black')
# plt.show()

# for m in range(50):
#   cluster_1=[]
#   cluster_2=[]
#   cluster_3=[]
#   clusters=[cluster_1,cluster_2,cluster_3]
  
#   for i in range(25):
#     distance=[]
#     for j in range(3):
#       s=0
#       for k in range(5):
#         s=s+(file[i][k]-centers[j][k])**2
#       s=s**.5
#       distance.append(s) 
#     min_value = min(distance)   
#     min_index = distance.index(min_value)
#     clusters[min_index].append(file[i])  
#   index=0
#   mean=[[],[],[]]
#   for i in clusters:
#     for j in range(5):
#       s=0
#       for k in range(len(clusters[index])):
#         s=s+i[k][j] 
#       s=s/len(clusters[index])
#       mean[index].append(s)
#     index=index+1

#   for i in range(3):
#      centers[i]=mean[i]  
#   clusters

clusters

